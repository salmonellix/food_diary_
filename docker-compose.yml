version: '3.7'

services:
  redis:
    restart: always
    image: redis:5
    ports:
      - "6379:6379"
    networks:
      - db-net
    environment:
      - DEBUG=1
      - SECRET_KEY=foo
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=food_diary_dev
      - SQL_USER=food_diary
      - SQL_PASSWORD=food_diary123
      - SQL_HOST=db
      - SQL_PORT=5432
      - DATABASE=postgres

  db:
    image: postgres:12.0-alpine
    environment:
      - POSTGRES_USER=food_diary
      - POSTGRES_PASSWORD=food_diary123
      - POSTGRES_DB=food_diary_dev
  project:
    restart: always
    container_name: code
    command: python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000

    build:
      context: ./food_diary/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - db-net

  frontend:
    restart: always
    command: npm start
    container_name: front
    build:
      context: ./react-diary/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - project
    networks:
      - db-net

networks:
  db-net:
    driver: bridge

volumes:
  postgres_data: